# Define a rate limiting zone (5 requests/sec per IP, memory for tracking = 10MB)
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=5r/s;

server {
    listen 80;
    server_name localhost;

    # Timeouts for better resilience
    client_header_timeout 10s;
    client_body_timeout 10s;
    send_timeout 10s;

    # Limit upload size
    client_max_body_size 5M;

    # Proxy buffer tuning
    proxy_buffers 8 16k;
    proxy_buffer_size 32k;

    # API proxying with rate limiting
    location / {
        limit_req zone=api_limit burst=10 nodelay;
        proxy_pass http://api:8000;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Ensure long-lived connections work well
        proxy_read_timeout 60s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
    }

    # Simple worker status endpoint
    location /worker/ {
        default_type text/plain;
        return 200 'Worker is running in background via Celery.';
    }

    # Health check endpoint for container orchestrators
    location /healthz {
        default_type text/plain;
        return 200 'OK';
    }

    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
    }
}