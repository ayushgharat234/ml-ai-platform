name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-scan:
    runs-on: ubuntu-latest

    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and Start All Services
      run: |
        docker compose -f docker-compose.yml up -d --build

    - name: Wait for API to be Healthy
      run: |
        echo "Waiting for API to become healthy..."
        for i in {1..30}; do
          if curl -s http://localhost:8000/health | grep -q "ok"; then
            echo "API is healthy!"
            exit 0
          fi
          sleep 2
        done
        echo "API did not become healthy in time."
        docker compose logs api
        exit 1

    - name: Run API Tests
      run: |
        docker compose exec -T api python test_api.py

    - name: Trivy Scan (API)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: api_container
        format: 'table'
        exit-code: '1' # Fail the build on vulnerabilities. Set to '0' for warnings only.

    - name: Trivy Scan (Worker)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: celery_worker
        format: 'table'
        exit-code: '1' # Fail the build on vulnerabilities. Set to '0' for warnings only.

    - name: Tear Down and Clean Up
      if: always()
      run: docker compose -f docker-compose.yml down -v

    - name: Docker Compose Logs (on failure)
      if: failure()
      run: docker compose logs